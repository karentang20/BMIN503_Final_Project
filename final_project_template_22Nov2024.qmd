---
title: "Social Determinants on Diabetes Deaths in the U.S."
subtitle: "BMIN503/EPID600 Final Project"
author: "Karen Tang"
format: html
editor: visual
number-sections: true
embed-resources: true
---

------------------------------------------------------------------------

Use this template to complete your project throughout the course. Your Final Project presentation will be based on the contents of this document. Replace the title/name above and text below with your own, but keep the headers. Feel free to change the theme and other display settings, although this is not required. I added a new sentence

## Overview {#sec-overview}

Give a brief a description of your project and its goal(s), what data you are using to complete it, and what two faculty/staff in different fields you have spoken to about your project with a brief summary of what you learned from each person. Include a link to your final project GitHub repository.

##The faculty I spoke to about my project is Dr. Richard Tsui. I learned from Dr. Richard Tsui that MIMIC IV is also a data source I can use for the project. He also guided me to choose a specific social determinants that directly correlates to the disease I want to learn more about.

A brief summary is to look into the social determinants in diabetes disease.

## Introduction {#sec-introduction}

Describe the problem addressed, its significance, and some background to motivate the problem. This should extend what is in the @sec-overview.

##According to the CDC, in 2020, 38.4 million people i the United States of all ages had diabetes. Diabetes was the eighth leading cause of death in the United States. In the abstract from the Diabetes Journals, it's stated that diabetes has a long-standing, well-documented socioeconomic and racial/ethnic inequalities in disease prevalence and incidence, morbidity and mortality. Higher diabetes prevalence is associated with lower education, lower income, and non-White race/ethnicity. Due to the association, I would like to learn and conduct an analysis on the social determinants on diabetes.

Explain why your problem is interdisciplinary, what fields can contribute to its understanding, and incorporate background related to what you learned from meeting with faculty/staff.

##My problem is interdisciplinary is it involves public health researchers, physicians, public health services, pharmaceutical companies to in order to address the issue and make changes. This can be incorporate into the background because I see the diabetes technology that has been made to help and make it more affordable and convenience for patients diabetes management.

## Methods {#sec-methods}

Describe the data used and general methodological approach used to address the problem described in the @sec-introduction. Subsequently, incorporate full R code necessary to retrieve and clean data, and perform analysis. Be sure to include a description of code so that others (including your future self) can understand what you are doing and why.

##The data I use for this project is the US Social Determinants of Health Database 2020 Census data and MIMIC IV data of Diabetes as the cause of death in 2020 across the US.

```{r}
#Loading the packages
library (readxl)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(sf)
library(tigris)
library(leaflet)
library(maps)
#Loading in death dataset, dataset from MIMIC IV on deaths with diabetes as the cause
library(readxl)
social_determinants<- read_excel("C:/Users/nghik/Downloads/sdoh_2020_tract_1_0.xlsx", sheet = 2)


#Selecting out variables to use 
new_soc <- social_determinants %>%
  select(c("TRACTFIPS", "STATE", "COUNTYFIPS", "STATEFIPS", "ACS_PCT_WHITE", "ACS_PCT_PERSON_INC_BELOW99","ACS_TOT_CIVIL_EMPLOY_POP","ACS_TOT_CIVILIAN_LABOR","ACS_PCT_LT_HS","ACS_PCT_POSTHS_ED"))

#Loading the definition of the variables in "death"
definition<- read_excel("C:/Users/nghik/Downloads/sdoh_2020_tract_1_0.xlsx")


#Loading diabetes
library(readr)
diabetes <- read_csv("C:/Users/nghik/Downloads/ExportCSV.csv")




```

```{r}
#Map with percent of income by TRACTFIPS
#load tract shapefiles for a specific state 

#Prevent re-download of the tigris 
options(tigris_use_cache= TRUE)

states_sf <- states(year = 2020, cb = TRUE) #################

# Perform the left join
diabetes_sf <- left_join(states_sf, diabetes, by = c("NAME" = "LocationDesc"))

#Cleaning up the NAs columns
diabetes_clean <- diabetes_sf %>%
  select(-c("Data_Value_Footnote_Symbol", "Data_Value_Footnote", "FootnoteType", "FootNoteSymbol", "FootnoteText", "URL", "DatasourceAbbr", "Agency"))
```

```{r}
#Making the variables numeric
diabetes_clean$Data_Value <- as.numeric(as.character(diabetes_clean$Data_Value))

#Making Figure 1, showing amount of the following
#Yes, have diabetes = red
#Yes, pregnancy-related = pink
#No, pre-diabetes or borderline diabetes = blue
#No = green
Figure_1 <- ggplot(diabetes_clean) +
  geom_sf(aes(fill = Response, color = Data_Value)) +  
  scale_fill_manual(values = c("Yes" = "red", "Yes, pregnancy-related" = "pink", "No, pre-diabetes or borderline diabetes" = "blue", "No" = "green")) +  # Manual fill for responses
  scale_color_gradient(low = "lightblue", high = "darkblue") +  # Color scale for data_value
  labs(title = "State Data by Response and Data Value",
       fill = "Response",
       color = "Data Value") +
  theme_minimal()

Figure_1
```

```{r}
#Since Figure 1 is dominated by No's, let's exclude the No's
diabetes_yes <- diabetes_clean %>%
  filter(Response == "Yes" | Response == "Yes, pregnancy-related")

Figure_2 <- ggplot(diabetes_yes) +
  geom_sf(aes(fill = Response, color = Data_Value)) +  
  scale_fill_manual(values = c("Yes" = "red", "Yes, pregnancy-related" = "pink")) +  # Manual fill for responses
  scale_color_gradient(low = "lightblue", high = "darkblue") +  # Color scale for data_value
  labs(title = "State Data by Response and Data Value",
       fill = "Response",
       color = "Data Value") +
  theme_minimal()
Figure_2
```

```{r}
diabetes_no <- diabetes_clean %>%
  filter(Response == "No" | Response == "No, pre-diabetes or borderline diabetes")


Figure_3 <- ggplot(diabetes_no) +
  geom_sf(aes(fill = Response, color = Data_Value)) +  
  scale_fill_manual(values = c("No" = "green", "No, pre-diabetes or borderline diabetes" = "blue")) +  # Manual fill for responses
  scale_color_gradient(low = "lightblue", high = "darkblue") +  # Color scale for data_value
  labs(title = "State Data by Response and Data Value",
       fill = "Response",
       color = "Data Value") +
  theme_minimal()
Figure_3

```

```{r}
#This is also an interactive map on the Yes's 
# Define a color palette for the data values
palette <- colorNumeric(
  palette = "YlOrRd",  # Yellow to Red gradient
  domain = diabetes_yes$Data_Value
)

# Create the interactive map
leaflet(diabetes_yes) %>%
  addTiles() %>%  # Add the base map tiles
  addPolygons(
    fillColor = ~palette(Data_Value),  # Fill color based on data_value
    weight = 1,  # Border weight
    color = "black",  # Border color
    fillOpacity = 0.7,  # Fill opacity
    highlightOptions = highlightOptions(
      weight = 3,
      color = "white",
      fillOpacity = 0.9,
      bringToFront = TRUE
    ),
    # Add popup information for interactivity
    popup = ~paste0(
      "<strong>State: </strong>", NAME, "<br>",
      "<strong>Responses: </strong>", Response, "<br>",
      "<strong>Data Values: </strong>", Data_Value
    )
  ) %>%
  addLegend(
    "bottomright",
    pal = palette,
    values = ~Data_Value,
    title = "Data Value",
    opacity = 1
  )


```

#At this point, it looks like there are no strong difference in diabetes prevalence between different states. The next section is to find the average percentage of white population - high level of white population will results in lower diabetes prevalence.

```{r}
#Average all variables based on state
average_soc <- new_soc %>%
  group_by(STATE) %>%
  summarize(across(where(is.numeric), mean, na.rm = TRUE), 
            Count = n())

#Merging the two dataset by state name
analysis <- full_join(average_soc, diabetes_yes, by = c("STATE"="NAME"))

#Excluding NAs
analysis_yes <- na.omit(analysis) %>%
  filter(Response == "Yes")

analysis_preg <- na.omit(analysis) %>%
  filter(Response == "Yes, pregnancy related")
```

```{r}
#Analysis on White population and diabetes prevalence 
#Dependent variable (y) = diabetes prevalence, Data_Value in this case, the percentage of diabetes prevalence
#Independent Variable (x) = ACS_PCT_WHITE in this case and it's the average population of White race in the state. 



##################
# Define a function to perform lm for each state and extract the coefficients
run_lm_by_state <- function(analysis_yes, Data_Value, ACS_PCT_WHITE) {
  
  # Group by state and run the lm model for each state
  lm_results <- analysis_yes %>%
    group_by(STATE) %>%
    do(model = lm(as.formula(paste(Data_Value, "~", ACS_PCT_WHITE)), data = .))
  
  # Create an empty data frame to store coefficients
  coefficients_by_state <- lm_results
  coefficients_by_state$intercept <- NA
  coefficients_by_state$slope <- NA
  
  # Loop through each model to extract the coefficients
  for (i in 1:nrow(coefficients_by_state)) {
    # Extract the coefficients from each model
    coefs <- coef(coefficients_by_state$model[[i]])
    
    # Ensure that the coefficients are correctly assigned using named indices
    coefficients_by_state$intercept[i] <- coefs["(Intercept)"]  # Extract intercept by name
    coefficients_by_state$slope[i] <- coefs["ACS_PCT_WHITE"]  # Extract slope by name (predictor variable)
    
    # Print the coefficients for each state
    print(paste("State:", coefficients_by_state$STATE[i]))
    print(paste("Intercept:", coefficients_by_state$intercept[i]))
    print(paste("Slope:", coefficients_by_state$slope[i]))
    print("---")
  }
  
  return(coefficients_by_state)
}

# Use the function
coefficients_by_state <- run_lm_by_state(analysis_yes, "Data_Value", "ACS_PCT_WHITE")

# View the result
print(coefficients_by_state)

most_white_diabetes <- coefficients_by_state %>%
  arrange(desc(abs(intercept)))

print(most_white_diabetes) #The state's diabetes prevalence that is most influenced by White population is West Virginia

most_diabetes <- analysis_yes %>%
  arrange(desc(Data_Value)) %>%
  select(STATE, Data_Value, ACS_PCT_WHITE)

print(most_diabetes)


most_white_state <- analysis_yes %>%
  arrange(desc(ACS_PCT_WHITE)) %>%
  select(STATE, Data_Value, ACS_PCT_WHITE)

print(most_white_state)

#The state with the highest diabetes prevalence is West Virginia and it is also the state with the fourth highest White population. We cannot draw any conclusion based on which state have the highest diabetes prevalence and white population, but the regression line test shows that the White population have an impact on the highest diabetes, whether it's positive or negative. 

```

```{r}
#Analysis on below poverty population and diabetes prevalence 
#Dependent variable (y) = diabetes prevalence, Data_Value in this case, the percentage of diabetes prevalence
#Independent Variable (x) = ACS_PCT_PERSON_INC_BELOW99 in this case, which is the average amount of people in each state with the poverty level of .99, meaning 99% of their income is below government poverty guidelines. 
#I'm predicting that the higher the percentage is, the higher the diabetes prevalence will be

run_statewise_regression <- function(analysis.yes, predictor = "ACS_PCT_PERSON_INC_BELOW99", response = "Data_Value") {
  # Run the regression for each state
  results <- analysis.yes %>%
    group_by(STATE) %>%
    summarise(
      intercept = coef(lm(as.formula(paste(response, "~", predictor)), data = cur_data()))[1],
      slope = coef(lm(as.formula(paste(response, "~", predictor)), data = cur_data()))[2]
    ) %>%
    ungroup()
  
  return(results)
}

# Apply the function for ACS_PCT_PERSON_INC_BELOW99 as the predictor
results_income_below99 <- run_statewise_regression(analysis_yes, predictor = "ACS_PCT_PERSON_INC_BELOW99")

# Display the results
print(results_income_below99)

most_poverty_diabetes <- results_income_below99 %>%
  arrange(desc(abs(intercept)))

print(most_poverty_diabetes) #The state's diabetes prevalence that is most influenced by below poverty population is West Virginia

most_diabetes_poverty <- analysis_yes %>%
  arrange(desc(Data_Value)) %>%
  select(STATE, Data_Value, ACS_PCT_PERSON_INC_BELOW99)

print(most_diabetes_poverty)
#As we know, the state with the highest diabetes prevalence is West Virginia


most_poverty_state <- analysis_yes %>%
  arrange(desc(ACS_PCT_PERSON_INC_BELOW99)) %>%
  select(STATE, Data_Value, ACS_PCT_PERSON_INC_BELOW99)

print(most_poverty_state)
#The state with the highest percent of the population is living in poverty is Mississippi.

#Again, we cannot make a clear conclusion just based on the highest diabetes prevalence and highest poverty level in a state. 

```

## Results {#sec-results}

```{r}
#Describe your results and include relevant tables, plots, and code/comments used to obtain them. You may refer to the @sec-methods as needed. End with a brief conclusion of your findings related to the question you set out to address. You can include references if you'd like, but this is not required.

##Based on Figure 1, the graphs seems more dominated by "No" responses because there are many no's in the dataset.

##Based on Figure 2, the graphs only Wyoming have a high amount of Yes's. While Idaho, Utah, Nevada, Dakpta, Kansas, Iowa, Illinois, Indiana, Carolina have high levels of Yes, pregnancy related. 

##Figure 3 does not seems to be different from figure 1 because there are overwhelmingly more No's in the dataset. 

#Map 1 does not show a a high number of yes in any of the states

## Conclusion:
#The conclusion on the dataset are the following:
#Highest diabetes -> West Virginia
#Highest white population -> West Virginia, Lowest white population -> Maryland
#Most poverty state -> Mississippi

#Based on the information pulled from the dataset and the possible error in the linear regression test conducted, the conclusion for this analysis is inconclusive. For future project, a dataset with more information should be use in order to conduct a thorough analysis. 

